<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<display-name>wms</display-name>

	<!-- Spring Core -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:spring/spr-*.xml</param-value>
	</context-param>
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

	<!-- 支持跨域请求，测试用 -->
	<!--  
	<filter>
	     <filter-name>CORS</filter-name>
	     <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
	    <init-param>
	         <param-name>cors.allowOrigin</param-name>
	         <param-value>*</param-value>
	     </init-param>
	     <init-param>
	      	 <param-name>cors.supportedMethods</param-name>
	         <param-value>GET,POST,HEAD,PUT,DELETE</param-value>
	     </init-param>
	     <init-param>
	      <param-name>cors.supportedHeaders</param-name>
	         <param-value>Accept,Origin,X-Requested-With,Content-Type,Last-Modified </param-value>
	     </init-param>
	     <init-param>
	         <param-name>cors.exposedHeaders</param-name>
	         <param-value>Set-Cookie</param-value>
	     </init-param>
	     <init-param>
	         <param-name>cors.supportsCredentials</param-name>
	         <param-value>true</param-value>
	     </init-param>
	</filter>
	<filter-mapping>
	     <filter-name>CORS</filter-name>
	     <url-pattern>/*</url-pattern>
	</filter-mapping>
	-->

	<!-- Apache Shiro [与spr-shiro.xml配置文件中的Shiro主过滤器名称必须一致] -->
	<filter>
		<filter-name>shiroFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>targetFilterLifecycle</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>shiroFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Spring MVC -->
	<servlet>
		<servlet-name>springServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:spring/spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>


	<!-- http://localhost:8080/wms/druid/sql.html -->
	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<init-param>
			<!-- 经常需要排除一些不必要的url，比如.js,/jslib/等等。配置在init-param中 -->
			<param-name>exclusions</param-name>
			<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
		</init-param>
		<!-- 缺省sessionStatMaxCount是1000个。你可以按需要进行配置 -->
		<init-param>
			<param-name>sessionStatMaxCount</param-name>
			<param-value>1000</param-value>
		</init-param>
		<!-- druid 0.2.7版本开始支持profile，配置profileEnable能够监控单个url调用的sql列表 -->
		<init-param>
			<param-name>profileEnable</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>principalSessionName</param-name>
			<param-value>users.username</param-value>
		</init-param>
		<!-- 你可以关闭session统计功能 
		<init-param> 
			<param-name>sessionStatEnable</param-name> 
			<param-value>true</param-value>
		</init-param> -->
	</filter>
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
		<!-- 
			deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。
			如果allow没有配置或者为空，则允许所有访问
		 -->
		<init-param>
			<param-name>allow</param-name>
			<param-value>192.168.1.103,127.0.0.1</param-value>
		</init-param>
		<init-param>
			<param-name>deny</param-name>
			<param-value>192.168.1.118</param-value>
		</init-param>
		<!-- 在StatViewSerlvet输出的html页面中，有一个功能是Reset All，执行这个操作之后，会导致所有计数器清零，重新计数 -->
	   <init-param>
	        <param-name>resetEnable</param-name>
	        <param-value>false</param-value>
	    </init-param>
	    <!--  用户名和密码 -->
	    <init-param>
			<param-name>loginUsername</param-name>
			<param-value>admin</param-value>
		</init-param>
		<init-param>
			<param-name>loginPassword</param-name>
			<param-value>admin</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>

</web-app>
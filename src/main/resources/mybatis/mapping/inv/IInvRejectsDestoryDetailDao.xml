<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunkouan.wms.modules.inv.dao.InvRejectsDestoryDetailDao" >
  <resultMap id="BaseResultMap" type="com.yunkouan.wms.modules.inv.entity.InvRejectsDestoryDetail" >
    <id column="rejects_destory_detail_id" property="rejectsDestoryDetailId" jdbcType="VARCHAR" />
    <result column="rejects_destory_id" property="rejectsDestoryId" jdbcType="VARCHAR" />
    <result column="stock_id" property="stockId" jdbcType="VARCHAR" />
    <result column="op_number" property="opNumber" jdbcType="DOUBLE" />
    <result column="op_weight" property="opWeight" jdbcType="DOUBLE" />
    <result column="op_value" property="opValue" jdbcType="DOUBLE" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="warehouse_id" property="warehouseId" jdbcType="VARCHAR" />
    <result column="update_person" property="updatePerson" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="rejects_destory_detail_id2" property="rejectsDestoryDetailId2" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    rejects_destory_detail_id, rejects_destory_id, stock_id, op_number, op_weight, op_value, 
    create_person, create_time, org_id, warehouse_id, update_person, update_time, rejects_destory_detail_id2
  </sql>
  
  <delete id="emptyDetail" parameterType="String" >
    delete from inv_rejects_destory_detail
    where rejects_destory_id = #{rejectId}
  </delete>
</mapper>